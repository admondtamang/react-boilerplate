[{"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\index.js":"1","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\App.js":"2","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\reportWebVitals.js":"3","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\store.js":"4","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\index.js":"5","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\user\\userReducer.js":"6","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\user\\userTypes.js":"7","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\Login\\index.js":"8","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\Login\\Login.js":"9","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\index.js":"10","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\user\\userAction.js":"11","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\Home\\Home.js":"12","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Dashboard.js":"13","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\listItems.js":"14","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Chart.js":"15","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Orders.js":"16","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Deposits.js":"17","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Title.js":"18","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\data\\dataReducer.js":"19","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\data\\userTypes.js":"20","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\data\\dataAction.js":"21"},{"size":500,"mtime":1607495261544,"results":"22","hashOfConfig":"23"},{"size":801,"mtime":1607587492634,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1607495261544,"results":"25","hashOfConfig":"23"},{"size":932,"mtime":1607587638550,"results":"26","hashOfConfig":"23"},{"size":26,"mtime":1607500379696,"results":"27","hashOfConfig":"23"},{"size":599,"mtime":1607588110045,"results":"28","hashOfConfig":"23"},{"size":119,"mtime":1607588086467,"results":"29","hashOfConfig":"23"},{"size":49,"mtime":1598625240670,"results":"30","hashOfConfig":"23"},{"size":4531,"mtime":1607589707946,"results":"31","hashOfConfig":"23"},{"size":58,"mtime":1598719439235,"results":"32","hashOfConfig":"23"},{"size":1046,"mtime":1607588137811,"results":"33","hashOfConfig":"23"},{"size":412,"mtime":1607573573963,"results":"34","hashOfConfig":"23"},{"size":5894,"mtime":1607119297000,"results":"35","hashOfConfig":"23"},{"size":1971,"mtime":1607119297000,"results":"36","hashOfConfig":"23"},{"size":1429,"mtime":1607119297000,"results":"37","hashOfConfig":"23"},{"size":2787,"mtime":1607588026331,"results":"38","hashOfConfig":"23"},{"size":847,"mtime":1607119297000,"results":"39","hashOfConfig":"23"},{"size":343,"mtime":1607119297000,"results":"40","hashOfConfig":"23"},{"size":324,"mtime":1607586469492,"results":"41","hashOfConfig":"23"},{"size":37,"mtime":1607584243405,"results":"42","hashOfConfig":"23"},{"size":373,"mtime":1607588076151,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"zv3n09",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\index.js",[],["91","92"],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\App.js",["93","94"],"import \"./App.css\";\nimport { Login } from \"./pages\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport { persistor, store } from \"./redux/store\";\nfunction App() {\n    return (\n        <Provider store={store}>\n            {/* <PersistGate loading={null} persistor={persistor}> */}\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\n                </Switch>\n            </Router>\n            {/* </PersistGate> */}\n        </Provider>\n    );\n}\n\nexport default App;\n","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\reportWebVitals.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\store.js",["95","96","97","98"],"import userReducer from \"./user/userReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    users: userReducer,\r\n    data: dataReducer,\r\n});\r\n\r\nconst midddleware = [thunk, logger];\r\n\r\n// const persistConfig = {\r\n//   key: \"user\",\r\n//   storage,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, userReducer);\r\n\r\n// export const store = createStore(\r\n//   persistedReducer,\r\n//   applyMiddleware(...midddleware)\r\n// );\r\n\r\n//  Without presistor\r\nexport const store = createStore(rootReducer, applyMiddleware(logger, thunk));\r\n\r\n// export const persistor = persistStore(store);\r\n","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\index.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\user\\userTypes.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\Login\\index.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\Login\\Login.js",["99","100","101"],"import { TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authUser, fetchUsers } from \"../../redux/user/userAction\";\r\nimport \"./login.css\";\r\n\r\nimport * as yup from \"yup\";\r\nexport default function Login() {\r\n    // Selecting user from redux i.e. {users,data}\r\n    const user = useSelector((state) => state.users.user);\r\n    const dispatch = useDispatch();\r\n\r\n    if (user) {\r\n        return <Redirect to=\"/Dashboard\" />;\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string(\"Enter your email\")\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Email is required\"),\r\n        username: yup\r\n            .string(\"Enter your Username\")\r\n            .min(8, \"Username should be of minimum 8 characters length\")\r\n            .required(\"Username is required\"),\r\n    });\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <h1 className=\"heading\">Login</h1>\r\n\r\n                <Formik\r\n                    initialValues={{ email: \"sdf@gmilc.om\", username: \"Bret\" }}\r\n                    // validate={validationSchema}\r\n                    validate={(values) => {\r\n                        const errors = {};\r\n                        if (!values.email) {\r\n                            errors.email = \"Required\";\r\n                        } else if (\r\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\r\n                                values.email\r\n                            )\r\n                        ) {\r\n                            errors.email = \"Invalid email address\";\r\n                        }\r\n                        return errors;\r\n                    }}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        console.log(\"hello\");\r\n                        dispatch(fetchUsers(values));\r\n                        setSubmitting(false);\r\n                    }}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                    }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                helperText={touched.email && errors.email}\r\n                            />\r\n                            {errors.email && touched.email && errors.email}\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                label=\"User Name\"\r\n                                value={values.username}\r\n                                onChange={handleChange}\r\n                                error={\r\n                                    touched.username && Boolean(errors.username)\r\n                                }\r\n                                helperText={touched.username && errors.username}\r\n                            />\r\n                            {errors.username &&\r\n                                touched.username &&\r\n                                errors.username}\r\n\r\n                            <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n\r\n                            {/* For testing */}\r\n                            {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\index.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\user\\userAction.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\pages\\Home\\Home.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\listItems.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Chart.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Orders.js",["102","103","104","105"],"import React, { useEffect, useState } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport Axios from \"axios\";\nimport { fetchData } from \"../../redux/data/dataAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Orders() {\n    const [isFetching, setIsFetching] = useState(false);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchData());\n        setIsFetching(true);\n    }, []);\n    let data = useSelector((state) => state.data.data);\n\n    if (isFetching) {\n        return (\n            <React.Fragment>\n                <Title>Users</Title>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>User Id</TableCell>\n                            <TableCell>Title</TableCell>\n                            <TableCell align=\"right\">Completed</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {data\n                            ? data.map((row) => (\n                                  <TableRow key={row.id}>\n                                      <TableCell>{row.userId}</TableCell>\n                                      <TableCell>{row.title}</TableCell>\n                                      <TableCell>{row.completed}</TableCell>\n                                  </TableRow>\n                              ))\n                            : null}\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <Title>Users</Title>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>User Id</TableCell>\n                            <TableCell>Title</TableCell>\n                            <TableCell align=\"right\">Completed</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>loading...</TableCell>\n                            <TableCell>loading...</TableCell>\n                            <TableCell>loading...</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        );\n    }\n}\n","C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Deposits.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\components\\dashboard\\Title.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\data\\dataReducer.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\data\\userTypes.js",[],"C:\\Users\\admon\\Desktop\\react\\login-template\\src\\redux\\data\\dataAction.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":50,"nodeType":"112","messageId":"113","endLine":4,"endColumn":54},{"ruleId":"110","severity":1,"message":"114","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":19},{"ruleId":"110","severity":1,"message":"115","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":22},{"ruleId":"110","severity":1,"message":"116","line":4,"column":24,"nodeType":"112","messageId":"113","endLine":4,"endColumn":38},{"ruleId":"110","severity":1,"message":"117","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":15},{"ruleId":"110","severity":1,"message":"118","line":14,"column":7,"nodeType":"112","messageId":"113","endLine":14,"endColumn":18},{"ruleId":"110","severity":1,"message":"119","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"120","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":18},{"ruleId":"110","severity":1,"message":"121","line":21,"column":11,"nodeType":"112","messageId":"113","endLine":21,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":12},{"ruleId":"110","severity":1,"message":"122","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":20},{"ruleId":"110","severity":1,"message":"119","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":20,"column":8,"nodeType":"125","endLine":20,"endColumn":10,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'persistor' is defined but never used.","'persistStore' is defined but never used.","'persistReducer' is defined but never used.","'storage' is defined but never used.","'midddleware' is assigned a value but never used.","'Axios' is defined but never used.","'authUser' is defined but never used.","'validationSchema' is assigned a value but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [dispatch]",{"range":"132","text":"133"},[792,794],"[dispatch]"]